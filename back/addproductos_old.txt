const express = require("express");
const mysql = require("mysql2");
const multer = require("multer");
const path = require("path");

const router = express.Router();

// Configuración de la conexión a MySQL
const db = mysql.createConnection({
    host: "localhost",
    user: "root", 
    password: "admin", 
    database: "tienda" 
});

db.connect((err) => {
    if (err) {
        console.error("Error al conectar a la base de datos:", err);
    } else {
        console.log("Conectado a MySQL (addproductos.js)");
    }
});

// Configurar multer para guardar los archivos
const storage = multer.diskStorage({
    destination: function(req, file, cb) {
        cb(null, 'imagenes/'); // Carpeta donde se guardarán las imágenes
    },
    filename: function(req, file, cb) {
        // Crear un nombre único para evitar sobrescrituras
        const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
        const extension = path.extname(file.originalname);
        cb(null, 'producto-' + uniqueSuffix + extension);
    }
});

const upload = multer({ 
    storage: storage,
    limits: { fileSize: 5 * 1024 * 1024 }, // Limitar a 5MB
    fileFilter: function(req, file, cb) {
        // Aceptar solo ciertos tipos de imagen
        if (file.mimetype.startsWith('image/')) {
            cb(null, true);
        } else {
            cb(new Error('Solo se permiten imágenes'), false);
        }
    }
});

// Nueva ruta GET para obtener todos los productos
router.get("/productos", (req, res) => {
    const sql = "SELECT * FROM productos";
    
    db.query(sql, (err, results) => {
        if (err) {
            console.error("Error al obtener productos:", err);
            return res.status(500).json({ 
                error: "Error al recuperar productos", 
                details: err.message 
            });
        }
        
        // Mapear resultados para asegurar que las rutas de imagen sean completas
        const productosConImagenes = results.map(producto => ({
            ...producto,
            imagen: producto.imagen ? `imagenes/${path.basename(producto.imagen)}` : null
        }));
        
        res.status(200).json(productosConImagenes);
    });
});

// Ruta para agregar un producto con carga de archivos
router.post("/productos", upload.single('imagen'), (req, res) => {
    const { nombre, descripcion, stock } = req.body;
    
    // Obtener la ruta de la imagen si se subió
    const rutaImagen = req.file ? `imagenes/${req.file.filename}` : '';
    
    const sql = "INSERT INTO productos (nombre, descripcion, imagen, stock) VALUES (?, ?, ?, ?)";
    
    db.query(sql, [nombre, descripcion, rutaImagen, stock || 0], (err, result) => {
        if (err) {
            console.error("Error al insertar producto:", err);
            res.status(500).json({ error: "Error al agregar producto" });
        } else {
            res.status(201).json({ 
                message: "Producto agregado correctamente",
                producto: {
                    id: result.insertId,
                    nombre,
                    descripcion,
                    imagen: rutaImagen,
                    stock
                }
            });
        }
    });
});

module.exports = router;